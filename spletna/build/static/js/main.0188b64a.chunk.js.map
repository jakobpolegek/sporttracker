{"version":3,"sources":["firebase.js","Post.js","axios.js","App.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","storage","Post","forwardRef","ref","user","username","postId","height","caption","weight","calories_burned","avg_heartrate","time","distance","pot","useEffect","unsubscribe","collection","doc","onSnapshot","snapshot","array","Array","limeOptions","color","className","MapContainer","center","lat","lon","zoom","scrollWheelZoom","TileLayer","attribution","url","slice","map","item","push","Marker","position","Polyline","pathOptions","positions","Popup","axios","create","baseURL","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","width","App","classes","useState","modalStyle","posts","setPosts","setUsername","email","setEmail","password","setPassword","setUser","open","setOpen","registerOpen","setRegisterOpen","onAuthStateChanged","authUser","console","log","displayName","updateProfile","docs","id","post","data","Modal","onClose","style","Input","placeholder","type","value","onChange","e","target","Button","onClick","preventDefault","signInWithEmailAndPassword","catch","error","alert","message","createUserWithEmailAndPassword","margin","signOut","marginTop","marginLeft","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","rel","href","integrity","crossorigin","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uMAYMA,EAVcC,IAASC,cAAc,CACvCC,OAAQ,0CACRC,WAAY,qCACZC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,8CAIYC,YACjBC,EAAOT,IAASS,O,GACNT,IAASU,U,4CC0EVC,EA9EFC,sBACX,WAAoGC,GAAQ,EAAzGC,KAA0G,IAApGC,EAAmG,EAAnGA,SAAUC,EAAyF,EAAzFA,OAAiBC,GAAwE,EAAjFC,QAAiF,EAAxED,QAAOE,EAAiE,EAAjEA,OAAOC,EAA0D,EAA1DA,gBAAgBC,EAA0C,EAA1CA,cAAcC,EAA4B,EAA5BA,KAAKC,EAAuB,EAAvBA,SAASC,EAAc,EAAdA,IAC5FC,qBAAU,WACR,IAAIC,EASJ,OARIV,IACFU,EAAc3B,EACX4B,WAAW,SACXC,IAAIZ,GACJa,YAAW,SAACC,QAIV,WAELJ,OAED,CAACV,IAIJ,IAAIe,EAAQC,QAENC,EAAc,CAAEC,MAAO,QAG7B,OACE,yBAAKC,UAAU,OAAOtB,IAAKA,GACzB,yBAAKsB,UAAU,gBACf,4BAAKpB,IAEL,wBAAIoB,UAAU,cACZ,0BAAMA,UAAU,iBAAgB,uCAAgBlB,GADlD,OACoE,6BAClE,0BAAMkB,UAAU,iBAAgB,uCAAgBhB,GAFlD,OAEoE,6BAClE,0BAAMgB,UAAU,iBAAgB,gDAAyBf,GAAuB,6BAChF,0BAAMe,UAAU,iBAAgB,kDAA2Bd,GAAqB,6BAChF,yBAAKc,UAAU,iBACb,6BAAS,yCAAkBb,EAN/B,YAOI,6BAAS,yCAAkBC,EAP/B,WAQI,6BACA,yCACA,kBAACa,EAAA,EAAD,CAAcC,OAAQ,CAACb,EAAI,GAAGc,IAAKd,EAAI,GAAGe,KAAMC,KAAM,EAAGC,iBAAiB,GACpE,kBAACC,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,uDAELpB,EAAIqB,MAAM,EAAE,GAAGC,KAAI,SAAAC,GAAI,MAEf,GAAD,OAAKA,EAAKT,KACP,GAAD,OAAKS,EAAKR,KACpBR,EAAMiB,KAAK,CAACD,EAAKT,IAAKS,EAAKR,MAE3B,kBAACU,EAAA,EAAD,CAAQC,SAAU,CAACH,EAAKT,IAAKS,EAAKR,MAClC,kBAACY,EAAA,EAAD,CAAUC,YAAanB,EAAaoB,UAAWtB,IAC/C,kBAACuB,EAAA,EAAD,4BAbN,IAmBO9B,EAAIqB,MAAM,GAAGC,KAAI,SAAAC,GAAI,MACb,GAAD,OAAKA,EAAKT,KACP,GAAD,OAAKS,EAAKR,KACpBR,EAAMiB,KAAK,CAACD,EAAKT,IAAKS,EAAKR,MAE3B,kBAACU,EAAA,EAAD,CAAQC,SAAU,CAACH,EAAKT,IAAKS,EAAKR,MAClC,kBAACY,EAAA,EAAD,CAAUC,YAAanB,EAAaoB,UAAWtB,IAC/C,kBAACuB,EAAA,EAAD,uBAAuB,CAACP,EAAKT,IAAI,IAAIS,EAAKR,iB,4CC1E3CgB,EAAMC,OAAO,CAC5BC,QAAS,0B,yBCOX,SAASC,IAIP,MAAO,CACLzC,OAAQ,QACR0C,IAAI,GAAD,OALO,GAKP,KACHC,KAAK,GAAD,OALO,GAKP,KACJC,UAAU,cAAD,OAPC,GAOD,eANE,GAMF,OAIb,IAAMC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLf,SAAU,WACVgB,MAAO,IACPjD,OAAQ,SAmKGkD,MA/Jf,WACE,IAAMC,EAAUN,IADH,EAGQO,mBAASX,GAAvBY,EAHM,sBAIaD,mBAAS,IAJtB,mBAINE,EAJM,KAICC,EAJD,OAKmBH,mBAAS,IAL5B,mBAKNtD,EALM,KAKI0D,EALJ,OAMaJ,mBAAS,IANtB,mBAMNK,EANM,KAMCC,EAND,OAOmBN,mBAAS,IAP5B,mBAONO,EAPM,KAOIC,EAPJ,OAQWR,mBAAS,MARpB,mBAQNvD,EARM,KAQAgE,EARA,OASWT,oBAAS,GATpB,mBASNU,EATM,KASAC,EATA,OAU2BX,oBAAS,GAVpC,mBAUNY,EAVM,KAUQC,EAVR,KA+Db,OAnDAzD,qBAAU,WACR,IAAMC,EAAcjB,EAAK0E,oBAAmB,SAACC,GAC3C,GAAIA,GAKF,GAHAC,QAAQC,IAAIF,GACZN,EAAQM,IAEJA,EAASG,YAGX,OAAOH,EAASI,cAAc,CAC5BD,YAAaxE,SAIjB+D,EAAQ,SAIZ,OAAO,WACLpD,OAED,CAACZ,EAAMC,IAEVU,qBAAU,WACN1B,EAAG4B,WAAW,SACbE,YAAW,SAACC,GAAD,OACV0C,EAAS1C,EAAS2D,KAAK3C,KAAI,SAAClB,GAAD,MAAU,CAAE8D,GAAI9D,EAAI8D,GAAIC,KAAM/D,EAAIgE,iBAIhE,IAsBD,yBAAKzD,UAAU,OAEb,kBAAC0D,EAAA,EAAD,CAAOd,KAAMA,EAAMe,QAAS,kBAAMd,GAAQ,KACxC,yBAAKe,MAAOzB,EAAYnC,UAAWiC,EAAQH,OACzC,0BAAM9B,UAAU,cACd,kBAAC6D,EAAA,EAAD,CACEC,YAAY,eACZC,KAAK,OACLC,MAAOzB,EACP0B,SAAU,SAACC,GAAD,OAAO1B,EAAS0B,EAAEC,OAAOH,UAErC,kBAACH,EAAA,EAAD,CACEC,YAAY,QACZC,KAAK,WACLC,MAAOvB,EACPwB,SAAU,SAACC,GAAD,OAAOxB,EAAYwB,EAAEC,OAAOH,UAExC,kBAACI,EAAA,EAAD,CAAQC,QArCE,SAACH,GACnBA,EAAEI,iBACFhG,EACGiG,2BAA2BhC,EAAOE,GAClC+B,OAAM,SAACC,GAAD,OAAWC,MAAMD,EAAME,YAEhC9B,GAAQ,KA+BA,kBAMN,kBAACa,EAAA,EAAD,CAAOd,KAAME,EAAca,QAAS,kBAAMZ,GAAgB,KACxD,yBAAKa,MAAOzB,EAAYnC,UAAWiC,EAAQH,OACzC,0BAAM9B,UAAU,cACd,kBAAC6D,EAAA,EAAD,CACEE,KAAK,OACLD,YAAY,uBACZE,MAAOpF,EACPqF,SAAU,SAACC,GAAD,OAAO5B,EAAY4B,EAAEC,OAAOH,UAExC,kBAACH,EAAA,EAAD,CACEC,YAAY,eACZC,KAAK,OACLC,MAAOzB,EACP0B,SAAU,SAACC,GAAD,OAAO1B,EAAS0B,EAAEC,OAAOH,UAErC,kBAACH,EAAA,EAAD,CACEC,YAAY,QACZC,KAAK,WACLC,MAAOvB,EACPwB,SAAU,SAACC,GAAD,OAAOxB,EAAYwB,EAAEC,OAAOH,UAExC,kBAACI,EAAA,EAAD,CAAQC,QAvDK,SAACH,GACtBA,EAAEI,iBACFhG,EACGsG,+BAA+BrC,EAAOE,GACtC+B,OAAM,SAACC,GAAD,OAAWC,MAAMD,EAAME,YAEhC5B,GAAgB,KAiDR,sBAKN,yBAAK/C,UAAU,eACf,yBAAKA,UAAU,aAEb,wBAAI4D,MAAO,CAAC7D,MAAO,UAAU8E,OAAQ,SAArC,iBAEK,OAAJlG,QAAI,IAAJA,OAAA,EAAAA,EAAMyE,aACL,yBAAKpD,UAAU,iBACb,kBAACoE,EAAA,EAAD,CAAQC,QAAS,kBAAM/F,EAAKwG,WAAWlB,MAAO,CAAC7D,MAAO,UAAUgF,UAAU,SAASC,WAAW,UAA9F,WAGF,0BAAMhF,UAAU,kBACd,kBAACoE,EAAA,EAAD,CAAQC,QAAS,kBAAMxB,GAAQ,IAAOe,MAAO,CAAC7D,MAAO,YAArD,WACA,kBAACqE,EAAA,EAAD,CAAQC,QAAS,kBAAMtB,GAAgB,IAAOa,MAAO,CAAC7D,MAAO,YAA7D,mBAKN,yBAAKC,UAAU,cACb,yBAAKA,UAAU,kBACb,kBAAC,IAAD,KAEEoC,EAAMzB,KAAI,gBAAG4C,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACR,kBAAC,EAAD,CACE7E,KAAMA,EACNsG,IAAK1B,EACL1E,OAAQ0E,EACR3E,SAAU4E,EAAK5E,SACfG,QAASyE,EAAKzE,QACdC,OAAQwE,EAAKxE,OACbF,OAAQ0E,EAAK1E,OACbG,gBAAiBuE,EAAKvE,gBACtBC,cAAesE,EAAKtE,cACpBC,KAAMqE,EAAKrE,KACXC,SAAUoE,EAAKpE,SACfC,IAAKmE,EAAKnE,cCtKN6F,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,0BAAMC,IAAI,aAAaC,KAAK,mDAC9BC,UAAU,kGACVC,YAAY,KAEV,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEd7B,OAAM,SAAAC,GACLvB,QAAQuB,MAAMA,EAAME,a","file":"static/js/main.0188b64a.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyBrNS9Y9zKUH3CESiD-Ab5Qw-0O8_Gy47g\",\r\n    authDomain: \"sporttracker-fd60b.firebaseapp.com\",\r\n    projectId: \"sporttracker-fd60b\",\r\n    storageBucket: \"sporttracker-fd60b.appspot.com\",\r\n    messagingSenderId: \"978482245151\",\r\n    appId: \"1:978482245151:web:840c67794c261b6d346f2a\"\r\n});\r\n\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage();\r\n\r\nexport { db, auth, storage };","import React, { useState, useEffect, forwardRef } from \"react\";\r\nimport \"./Post.css\";\r\nimport { db } from \"./firebase\";\r\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet'\r\nimport { List } from \"@material-ui/core\";\r\n\r\n\r\n//pot={post.pot[\"lon\"]}\r\n//<br></br><b>PATH:{pot} </b>\r\n\r\nconst Post = forwardRef(\r\n  ({ user, username, postId, caption, height,weight,calories_burned,avg_heartrate,time,distance,pot}, ref) => {\r\n    useEffect(() => {\r\n      let unsubscribe;\r\n      if (postId) {\r\n        unsubscribe = db\r\n          .collection(\"posts\")\r\n          .doc(postId)\r\n          .onSnapshot((snapshot) => {\r\n          });\r\n      }\r\n\r\n      return () => {\r\n        \r\n        unsubscribe();\r\n      };\r\n    }, [postId]);\r\n\r\n    var longtitude;\r\n    var latitude;\r\n    var array = Array();\r\n    const alo = true;\r\n    const limeOptions = { color: 'blue' }\r\n\r\n\r\n    return (\r\n      <div className=\"post\" ref={ref}>\r\n        <div className=\"post__header\">\r\n        <h3>{username}</h3>\r\n        </div>\r\n        <h4 className=\"post__text\">\r\n          <span className=\"post__caption\"><b>HEIGHT: </b>{height}</span> cm.<br></br>\r\n          <span className=\"post__caption\"><b>WEIGHT: </b>{weight}</span> kg.<br></br>\r\n          <span className=\"post__caption\"><b>CALORIES BURNED: </b>{calories_burned}</span><br></br>\r\n          <span className=\"post__caption\"><b>AVERAGE HEARTRATE: </b>{avg_heartrate}</span><br></br>\r\n          <div className=\"post__header\"></div>\r\n            <br></br><b>DURATION: </b>{time} seconds.\r\n            <br></br><b>DISTANCE: </b>{distance} meters.\r\n            <div>\r\n            <b>LOCATION: </b>\r\n            <MapContainer center={[pot[0].lat, pot[0].lon]} zoom={9} scrollWheelZoom={false}>\r\n                  <TileLayer\r\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                  />\r\n                  {pot.slice(0,1).map(item => (\r\n                  \r\n                  latitude= `${item.lat}`,\r\n                  longtitude= `${item.lon}`,\r\n                  array.push([item.lat, item.lon]),\r\n                  \r\n                  <Marker position={[item.lat, item.lon]}>\r\n                  <Polyline pathOptions={limeOptions} positions={array} />\r\n                  <Popup>Starting point.</Popup>\r\n                  </Marker>\r\n                  \r\n                  ))},\r\n\r\n\r\n                  {pot.slice(1).map(item => (\r\n                  latitude= `${item.lat}`,\r\n                  longtitude= `${item.lon}`,\r\n                  array.push([item.lat, item.lon]),\r\n                  \r\n                  <Marker position={[item.lat, item.lon]}>\r\n                  <Polyline pathOptions={limeOptions} positions={array} />\r\n                  <Popup>You were here: {[item.lat,\" \",item.lon]}</Popup>\r\n                  </Marker>\r\n                  ))}\r\n            </MapContainer>\r\n            \r\n          </div>\r\n        </h4>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Post;\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'http://localhost:8080',\r\n});\r\n\r\nexport default instance;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Post from \"./Post\";\r\nimport ImageUpload from \"./ImageUpload\";\r\nimport { db, auth } from \"./firebase\";\r\nimport { Button, makeStyles, Modal, Input } from \"@material-ui/core\";\r\nimport FlipMove from \"react-flip-move\";\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    height: \"300px\",\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 300,\r\n    height: 150,\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  //const [copy, setCopy] = useState();\r\n  const [modalStyle] = useState(getModalStyle);\r\n  const [posts, setPosts] = useState([]);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [user, setUser] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n  const [registerOpen, setRegisterOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\r\n      if (authUser) {\r\n        // user is logged in...\r\n        console.log(authUser);\r\n        setUser(authUser);\r\n\r\n        if (authUser.displayName) {\r\n          // dont update username\r\n        } else {\r\n          return authUser.updateProfile({\r\n            displayName: username,\r\n          });\r\n        }\r\n      } else {\r\n        setUser(null);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, [user, username]);\r\n\r\n  useEffect(() => {\r\n      db.collection(\"posts\")\r\n      .onSnapshot((snapshot) =>\r\n        setPosts(snapshot.docs.map((doc) => ({ id: doc.id, post: doc.data() })))\r\n      );\r\n      //console.log(copy);\r\n       \r\n  }, []);\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .catch((error) => alert(error.message));\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .catch((error) => alert(error.message));\r\n\r\n    setRegisterOpen(false);\r\n  };\r\n\r\n  return (\r\n    \r\n    <div className=\"app\">\r\n    {/* Forma za prijavo  */}\r\n      <Modal open={open} onClose={() => setOpen(false)}>\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <form className=\"app__login\">\r\n            <Input\r\n              placeholder=\"E-Pošta\"\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <Input\r\n              placeholder=\"Geslo\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <Button onClick={handleLogin}>Prijavi me!</Button>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n\r\n      {/* Forma za registracijo  */}\r\n      <Modal open={registerOpen} onClose={() => setRegisterOpen(false)}>\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <form className=\"app__login\">\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"Uporabniško ime\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n            <Input\r\n              placeholder=\"E-Pošta\"\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <Input\r\n              placeholder=\"Geslo\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <Button onClick={handleRegister}>Registriraj me!</Button>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n\r\n      <div className=\"app__header\">\r\n      <div className=\"app__logo\">\r\n        \r\n        <h3 style={{color: \"#c1cbd7\",margin: \"40px\"}}>\r\n        SportTracker</h3>\r\n        {user?.displayName ? (\r\n          <div className=\"app_loginHome\">\r\n            <Button onClick={() => auth.signOut()} style={{color: \"#c1cbd7\",marginTop:\"-100px\",marginLeft:\"140px\"}}>ODJAVA</Button>  \r\n            </div>\r\n        ) : (\r\n          <form className=\"app__loginHome\">\r\n            <Button onClick={() => setOpen(true)} style={{color: \"#c1cbd7\"}}>PRIJAVA</Button>\r\n            <Button onClick={() => setRegisterOpen(true)} style={{color: \"#c1cbd7\"}}>REGISTRACIJA</Button>\r\n          </form>\r\n        )}\r\n        </div>\r\n        </div>\r\n      <div className=\"app__posts\">\r\n        <div className=\"app__postsLeft\">\r\n          <FlipMove>\r\n            {\r\n            posts.map(({ id, post }) => (\r\n              <Post\r\n                user={user}\r\n                key={id}\r\n                postId={id}\r\n                username={post.username}\r\n                caption={post.caption}\r\n                weight={post.weight}\r\n                height={post.height}\r\n                calories_burned={post.calories_burned}\r\n                avg_heartrate={post.avg_heartrate}\r\n                time={post.time}\r\n                distance={post.distance}\r\n                pot={post.pot}\r\n              />\r\n            ))}\r\n          </FlipMove>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\"\n  integrity=\"sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A==\"\n  crossorigin=\"\"/>\n    \n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}